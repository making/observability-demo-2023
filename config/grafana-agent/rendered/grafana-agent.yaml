apiVersion: v1
kind: ServiceAccount
metadata:
  name: grafana-agent
  namespace: grafana-agent
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: grafana-agent
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/proxy
  - services
  - endpoints
  - pods
  - events
  verbs:
  - get
  - list
  - watch
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: grafana-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: grafana-agent
subjects:
- kind: ServiceAccount
  name: grafana-agent
  namespace: grafana-agent
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: grafana-agent
  name: grafana-agent
  namespace: grafana-agent
spec:
  clusterIP: None
  ports:
  - name: grafana-agent-http-metrics
    port: 80
    targetPort: 80
  - name: grafana-agent-traces-thrift-compact
    port: 6831
    protocol: UDP
    targetPort: 6831
  - name: grafana-agent-traces-thrift-binary
    port: 6832
    protocol: UDP
    targetPort: 6832
  - name: grafana-agent-traces-thrift-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: grafana-agent-traces-thrift-grpc
    port: 14250
    protocol: TCP
    targetPort: 14250
  - name: grafana-agent-traces-zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  - name: grafana-agent-traces-otlp-grpc
    port: 4317
    protocol: TCP
    targetPort: 4317
  - name: grafana-agent-traces-otlp-http
    port: 4318
    protocol: TCP
    targetPort: 4318
  - name: grafana-agent-traces-opencensus
    port: 55678
    protocol: TCP
    targetPort: 55678
  selector:
    name: grafana-agent
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: grafana-agent
  namespace: grafana-agent
spec:
  minReadySeconds: 10
  selector:
    matchLabels:
      name: grafana-agent
  template:
    metadata:
      annotations:
        agent-yaml-digest: 3a76553b106134296c1dcb53c80eaf3e
      labels:
        name: grafana-agent
    spec:
      containers:
      - args:
        - -config.expand-env=true
        - -config.file=/etc/agent/agent.yaml
        - -enable-features=integrations-next
        - -server.http.address=0.0.0.0:80
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        image: grafana/agent:v0.32.1
        imagePullPolicy: IfNotPresent
        name: grafana-agent
        ports:
        - containerPort: 80
          name: http-metrics
        - containerPort: 6831
          name: thrift-compact
          protocol: UDP
        - containerPort: 6832
          name: thrift-binary
          protocol: UDP
        - containerPort: 14268
          name: thrift-http
          protocol: TCP
        - containerPort: 14250
          name: thrift-grpc
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        - containerPort: 4317
          name: otlp-grpc
          protocol: TCP
        - containerPort: 4318
          name: otlp-http
          protocol: TCP
        - containerPort: 55678
          name: opencensus
          protocol: TCP
        securityContext:
          privileged: true
          runAsUser: 0
        volumeMounts:
        - mountPath: /etc/agent
          name: grafana-agent
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
      serviceAccountName: grafana-agent
      tolerations:
      - effect: NoSchedule
        operator: Exists
      volumes:
      - configMap:
          name: grafana-agent
        name: grafana-agent
      - hostPath:
          path: /var/log
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
        name: varlibdockercontainers
  updateStrategy:
    type: RollingUpdate
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-agent
  namespace: grafana-agent
data:
  agent.yaml: |-
    metrics:
      wal_directory: /var/lib/agent/wal
      global:
        scrape_interval: 30s
        external_labels:
          cluster: kind
      configs:
      - name: default
        remote_write:
        - url: http://prometheus-server.prometheus.svc.cluster.local/api/v1/write
        scrape_configs:
        - job_name: kubernetes-pods
          honor_labels: true
          honor_timestamps: true
          scrape_interval: 30s
          scrape_timeout: 10s
          metrics_path: /metrics
          scheme: http
          follow_redirects: true
          enable_http2: true
          relabel_configs:
          - source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape
            separator: ;
            regex: "true"
            replacement: $1
            action: keep
          - source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow
            separator: ;
            regex: "true"
            replacement: $1
            action: drop
          - source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scheme
            separator: ;
            regex: (https?)
            target_label: __scheme__
            replacement: $1
            action: replace
          - source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_path
            separator: ;
            regex: (.+)
            target_label: __metrics_path__
            replacement: $1
            action: replace
          - source_labels:
            - __address__
            - __meta_kubernetes_pod_annotation_prometheus_io_port
            separator: ;
            regex: (.+?)(?::\d+)?;(\d+)
            target_label: __address__
            replacement: $1:$2
            action: replace
          - separator: ;
            regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
            action: labelmap
          - source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_part_of
            separator: ;
            regex: (.*)
            target_label: app_kubernetes_io_part_of
            replacement: $1
            action: replace
          - source_labels:
            - __meta_kubernetes_namespace
            separator: ;
            regex: (.*)
            target_label: namespace
            replacement: $1
            action: replace
          - source_labels:
            - __meta_kubernetes_pod_name
            separator: ;
            regex: (.*)
            target_label: pod
            replacement: $1
            action: replace
          - source_labels:
            - __meta_kubernetes_pod_phase
            separator: ;
            regex: Pending|Succeeded|Failed|Completed
            replacement: $1
            action: drop
          - regex: __meta_kubernetes_pod_label_app_kubernetes_io_component
            action: labeldrop
          - source_labels:
            - __meta_kubernetes_pod_label_app
            separator: ;
            regex: (.*)
            target_label: app
            replacement: $1
            action: replace
          kubernetes_sd_configs:
          - role: pod
            kubeconfig_file: ""
            follow_redirects: true
            enable_http2: true
    traces:
      configs:
      - name: default
        receivers:
          zipkin: { }
          otlp:
            protocols:
              grpc:
              http:
        remote_write:
        - endpoint: tempo.tempo.svc.cluster.local:4317
          insecure: true
    logs:
      configs:
      - name: default
        clients:
        - url: http://loki.loki.svc.cluster.local:3100/loki/api/v1/push
          external_labels:
            cluster: kind
        positions:
          filename: /tmp/positions.yaml
        target_config:
          sync_period: 10s
        scrape_configs:
        - job_name: pod-logs
          kubernetes_sd_configs:
          - role: pod
          pipeline_stages:
          - cri: { }
          relabel_configs:
          - source_labels:
            - __meta_kubernetes_pod_node_name
            target_label: __host__
          #- action: labelmap
          #  regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_label_app_kubernetes_io_part_of
            target_label: app_kubernetes_io_part_of
          - action: replace
            replacement: $1
            separator: /
            source_labels:
            - __meta_kubernetes_namespace
            - __meta_kubernetes_pod_name
            target_label: job
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: namespace
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: pod
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_container_name
            target_label: container
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels:
            - __meta_kubernetes_pod_uid
            - __meta_kubernetes_pod_container_name
            target_label: __path__
